<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets  xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>unitaskf</Title>
      <Shortcut>unitaskf</Shortcut>
      <Description>async UniTask function</Description>
      <Author>to-osaki</Author>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>name</ID>
          <Default>function</Default>
        </Literal>
      </Declarations>
      <Code Language="csharp"><![CDATA[private async UniTask $name$(CancellationToken ct)
{
  $selected$$end$
}]]>
      </Code>
    </Snippet>
  </CodeSnippet>

  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>waituntil</Title>
      <Shortcut>waituntil</Shortcut>
      <Description>await UniTask.WaitUntil</Description>
      <Author>to-osaki</Author>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>expression</ID>
          <Default>expression</Default>
        </Literal>
      </Declarations>
      <Code Language="csharp"><![CDATA[await UniTask.WaitUntil(() => $expression$, cancellationToken: ct);$end$]]>
      </Code>
    </Snippet>
  </CodeSnippet>

  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>waitwhile</Title>
      <Shortcut>waitwhile</Shortcut>
      <Description>await UniTask.WaitWhile</Description>
      <Author>to-osaki</Author>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>expression</ID>
          <Default>expression</Default>
        </Literal>
      </Declarations>
      <Code Language="csharp"><![CDATA[await UniTask.WaitWhile(() => $expression$, cancellationToken: ct);$end$]]>
      </Code>
    </Snippet>
  </CodeSnippet>

</CodeSnippets>